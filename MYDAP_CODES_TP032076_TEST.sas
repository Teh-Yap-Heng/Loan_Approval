/* PROJECT FOLDER NAME: LOAN_APPLICATION_TEST_TP032076
   LIBRARY NAME		  : LIB32076 					    */

/* SAS CODES */
PROC SQL;

CREATE TABLE LIB32076.TEST_DS_TP032076 AS
SELECT * FROM LIB32076.LOAN_APPLICATION_TEST_TP032076;

QUIT;

PROC CONTENTS ORDER=VARNUM;

/* TO VIEW DATASET */
PROC PRINT DATA = LIB32076.TEST_DS_TP032076;
RUN;

/* UNIVARIATE FOR GENDER */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076;
TABLE GENDER;
RUN;

ODS GRAPHICS / RESET WIDTH=4.0 IN HEIGHT=3.0 IN IMAGEMAP;

PROC SGPLOT DATA = LIB32076.TEST_DS_TP032076;
VBAR GENDER;
TITLE 'UNIVARIATE ANALYSIS OF THE CATEGORICAL VARIABLE: GENDER';
RUN;

/* UNIVARIATE FOR MARITAL_STATUS */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076;
TABLE MARITAL_STATUS;
RUN;

ODS GRAPHICS / RESET WIDTH=4.0 IN HEIGHT=3.0 IN IMAGEMAP;

PROC SGPLOT DATA = LIB32076.TEST_DS_TP032076;
VBAR MARITAL_STATUS;
TITLE 'UNIVARIATE ANALYSIS OF THE CATEGORICAL VARIABLE: MARITAL_STATUS';
RUN;

/* UNIVARIATE FOR EMPLOYMENT */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076;
TABLE EMPLOYMENT;
RUN;

ODS GRAPHICS / RESET WIDTH=4.0 IN HEIGHT=3.0 IN IMAGEMAP;

PROC SGPLOT DATA = LIB32076.TEST_DS_TP032076;
VBAR EMPLOYMENT;
TITLE 'UNIVARIATE ANALYSIS OF THE CATEGORICAL VARIABLE: EMPLOYMENT';
RUN;

/* UNIVARIATE FOR FAMILY_MEMBERS */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076;
TABLE FAMILY_MEMBERS;
RUN;

ODS GRAPHICS / RESET WIDTH=4.0 IN HEIGHT=3.0 IN IMAGEMAP;

PROC SGPLOT DATA = LIB32076.TEST_DS_TP032076;
VBAR FAMILY_MEMBERS;
TITLE 'UNIVARIATE ANALYSIS OF THE CATEGORICAL VARIABLE: FAMILY_MEMBERS';
RUN;

/* UNIVARIATE FOR LOAN_LOCATION */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076;
TABLE LOAN_LOCATION;
RUN;

ODS GRAPHICS / RESET WIDTH=4.0 IN HEIGHT=3.0 IN IMAGEMAP;

PROC SGPLOT DATA = LIB32076.TEST_DS_TP032076;
VBAR LOAN_LOCATION;
TITLE 'UNIVARIATE ANALYSIS OF THE CATEGORICAL VARIABLE: LOAN_LOCATION';
RUN;

/* UNIVARIATE FOR QUALIFICATION */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076;
TABLE QUALIFICATION;
RUN;

ODS GRAPHICS / RESET WIDTH=4.0 IN HEIGHT=3.0 IN IMAGEMAP;

PROC SGPLOT DATA = LIB32076.TEST_DS_TP032076;
VBAR QUALIFICATION;
TITLE 'UNIVARIATE ANALYSIS OF THE CATEGORICAL VARIABLE: QUALIFICATION';
RUN;

/* UNIVARIATE ANALYSIS OF THE CONTINUOUS VARIABLE: CANDIDATE_INCOME */
PROC MEANS DATA = LIB32076.TEST_DS_TP032076 N NMISS MIN MEDIAN MAX STD;
VAR CANDIATE_INCOME;
RUN;

PROC SGPLOT DATA=LIB32076.TEST_DS_TP032076;
HISTOGRAM CANDIATE_INCOME;
RUN;

/* UNIVARIATE ANALYSIS OF THE CONTINUOUS VARIABLE: GUARANTEE_INCOME */
PROC MEANS DATA = LIB32076.TEST_DS_TP032076 N NMISS MIN MEDIAN MAX STD;
VAR GUARANTEE_INCOME;
RUN;

PROC SGPLOT DATA=LIB32076.TEST_DS_TP032076;
HISTOGRAM GUARANTEE_INCOME;
RUN;

/* UNIVARIATE ANALYSIS OF THE CONTINUOUS VARIABLE: LOAN_HISTORY */
PROC MEANS DATA = LIB32076.TEST_DS_TP032076 N NMISS MIN MEDIAN MAX STD;
VAR LOAN_HISTORY;
RUN;

PROC SGPLOT DATA=LIB32076.TEST_DS_TP032076;
HISTOGRAM LOAN_HISTORY;
RUN;

/* UNIVARIATE ANALYSIS OF THE CONTINUOUS VARIABLE: LOAN_AMOUNT */
PROC MEANS DATA = LIB32076.TEST_DS_TP032076 N NMISS MIN MEDIAN MAX STD;
VAR LOAN_AMOUNT;
RUN;

PROC SGPLOT DATA=LIB32076.TEST_DS_TP032076;
HISTOGRAM LOAN_AMOUNT;
RUN;

/* UNIVARIATE ANALYSIS OF THE CONTINUOUS VARIABLE: LOAN_DURATION */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076;
TABLE LOAN_DURATION;
RUN;

ODS GRAPHICS / RESET WIDTH=4.0 IN HEIGHT=3.0 IN IMAGEMAP;

PROC SGPLOT DATA = LIB32076.TEST_DS_TP032076;
VBAR LOAN_DURATION;
TITLE 'UNIVARIATE ANALYSIS OF THE CATEGORICAL VARIABLE: LOAN_DURATION';
RUN;

/* BIVARIATE ANALYSIS - 2 CATEGORICAL / 2 CONTINUOUS / 2 CAT & CON */
/* WRITE THE PURPOSE OF BIVARIATE ANALYSIS */

/* BIVARIATE ANALYSIS OF GENDER VS. QUALIFICATION */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076 ORDER=freq;
TABLES GENDER*QUALIFICATION / 
PLOTS= FREQPLOT(TWOWAY=STACKED SCALE=GROUPPCT);
RUN;

/* BIVARIATE ANALYSIS OF GENDER VS. MARITAL_STATUS */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076 ORDER=freq;
TABLES GENDER*MARITAL_STATUS / 
PLOTS= FREQPLOT(TWOWAY=STACKED SCALE=GROUPPCT);
RUN;

/* BIVARIATE ANALYSIS OF GENDER VS. LOAN_DURATION */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076 ORDER=freq;
TABLES GENDER*LOAN_DURATION / 
PLOTS= FREQPLOT(TWOWAY=STACKED SCALE=GROUPPCT);
RUN;

/* BIVARIATE ANALYSIS OF GENDER VS. LOAN_LOCATION */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076 ORDER=freq;
TABLES GENDER*LOAN_LOCATION / 
PLOTS= FREQPLOT(TWOWAY=STACKED SCALE=GROUPPCT);
RUN;

/* BIVARIATE ANALYSIS OF GENDER VS. LOAN_HISTORY */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076 ORDER=freq;
TABLES GENDER*LOAN_HISTORY / 
PLOTS= FREQPLOT(TWOWAY=STACKED SCALE=GROUPPCT);
RUN;


/* DATA CLEANING */
/* CREATE A COPY OF DATASET BEFORE HANDLING MISSING VALUE */
PROC SQL;
CREATE TABLE LIB32076.TEST_DS_TP032076_M
AS SELECT * FROM LIB32076.TEST_DS_TP032076;
QUIT;

/* FIND THE MISSING VALUE IN GENDER */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076_M;
TABLE GENDER;
RUN;  

PROC SQL;
CREATE TABLE LIB32076.TEST_DS_TP032076_M_GENDER
AS 
SELECT GENDER AS GENDER, COUNT(*) AS NUMBER_OF_GENDERS
FROM LIB32076.TEST_DS_TP032076_M
WHERE ( GENDER NE '' ) 
GROUP BY GENDER;
QUIT;

PROC SQL;
SELECT * FROM LIB32076.TEST_DS_TP032076_M_GENDER;
QUIT;

/* BEFORE IMPUTATION */
PROC SQL;
SELECT * FROM LIB32076.TEST_DS_TP032076_M
WHERE ( GENDER EQ '' );
QUIT;

PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET GENDER = ( SELECT GENDER FROM LIB32076.TEST_DS_TP032076_M_GENDER 
			   WHERE NUMBER_OF_GENDERS = ( SELECT MAX(NUMBER_OF_GENDERS)
                                           FROM LIB32076.TEST_DS_TP032076_M_GENDER ) )
WHERE ( GENDER EQ '' );
QUIT;

/* AFTER HANDLING MISSING VALUE */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076_M;
TABLE GENDER * MARITAL_STATUS;
RUN;

PROC SQL;
SELECT * FROM LIB32076.TEST_DS_TP032076_M
WHERE ( MARITAL_STATUS EQ '');
QUIT;

/* MISSING VALUE FOR MARITAL STATUS */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076_M;
TABLE MARITAL_STATUS;
RUN;

/* TO SHOW NO MISSING VALUES FOR GENDER AND MARITAL STATUS */
PROC SQL;
SELECT GENDER, MARITAL_STATUS FROM LIB32076.TEST_DS_TP032076_M;
QUIT;

PROC FREQ DATA = LIB32076.TEST_DS_TP032076_M;
TABLES GENDER * MARITAL_STATUS;
RUN;

PROC PRINT DATA = LIB32076.TEST_DS_TP032076_M;
RUN;

/* MISSING VALUE FOR FAMILY_MEMBERS */
PROC FREQ DATA = LIB32076.TEST_DS_TP032076_M;
TABLE FAMILY_MEMBERS;
RUN;

/* SUBSTR REPLACE THE '+' SIGN IN '+3' */
PROC SQL;
SELECT FAMILY_MEMBERS, SUBSTR(FAMILY_MEMBERS,1,1) FROM LIB32076.TEST_DS_TP032076_M;
QUIT;

/* REPLACE '+3' */
PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET FAMILY_MEMBERS = SUBSTR(FAMILY_MEMBERS,1,1);
QUIT;

/* MISSING VALUE FOR FAMILY_MEMBERS, CANDIDATE_INCOME, GUARANTEE_INCOME */
DATA LIB32076.TEST_DS_TP032076_M;
SET LIB32076.TEST_DS_TP032076_M(RENAME=(CANDIATE_INCOME = CANDIDATE_INCOME));
RUN;

PROC SQL;
SELECT FAMILY_MEMBERS, CANDIDATE_INCOME, GUARANTEE_INCOME FROM LIB32076.TEST_DS_TP032076_M;
QUIT;

PROC SQL;
SELECT FAMILY_MEMBERS, GUARANTEE_INCOME FROM LIB32076.TEST_DS_TP032076_M
WHERE FAMILY_MEMBERS IS NULL AND GUARANTEE_INCOME = 0;
QUIT;

PROC SQL;
SELECT FAMILY_MEMBERS, GUARANTEE_INCOME FROM LIB32076.TEST_DS_TP032076_M
WHERE FAMILY_MEMBERS IS NULL AND GUARANTEE_INCOME GT 0;
QUIT;

PROC SQL;
SELECT FAMILY_MEMBERS, CANDIDATE_INCOME FROM LIB32076.TEST_DS_TP032076_M
WHERE FAMILY_MEMBERS IS NULL AND CANDIDATE_INCOME = 0;
QUIT;

PROC SQL;
SELECT FAMILY_MEMBERS, CANDIDATE_INCOME FROM LIB32076.TEST_DS_TP032076_M
WHERE FAMILY_MEMBERS IS NULL AND CANDIDATE_INCOME GT 0;
QUIT;

PROC FREQ DATA=LIB32076.TEST_DS_TP032076_M;
TABLES FAMILY_MEMBERS;
RUN;

PROC FREQ DATA=LIB32076.TEST_DS_TP032076_M;
TABLES GUARANTEE_INCOME;
RUN;

PROC FREQ DATA=LIB32076.TEST_DS_TP032076_M;
TABLES CANDIDATE_INCOME;
RUN;

PROC SQL;
SELECT DISTINCT FAMILY_MEMBERS FROM LIB32076.TEST_DS_TP032076_M;
QUIT;

/* UPDATE FAMILY_MEMBERS ACCORDING TO CANDIDATE_INCOME & GUARANTEE_INCOME */
PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET FAMILY_MEMBERS ='0'
WHERE FAMILY_MEMBERS IS NULL AND GUARANTEE_INCOME = 0;
QUIT;

PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET FAMILY_MEMBERS ='1'
WHERE FAMILY_MEMBERS IS NULL AND GUARANTEE_INCOME GT 0;
QUIT;

PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET FAMILY_MEMBERS ='0'
WHERE FAMILY_MEMBERS IS NULL AND CANDIDATE_INCOME = 0;
QUIT;

PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET FAMILY_MEMBERS ='1'
WHERE FAMILY_MEMBERS IS NULL AND CANDIDATE_INCOME GT 0;
QUIT;

/* MISSING VALUE FOR EMPLOYMENT */
PROC FREQ DATA=LIB32076.TEST_DS_TP032076_M;
TABLE EMPLOYMENT;
RUN;

/* UPDATE EMPLOYMENT ACCORDING TO QUALIFICATION */
PROC FREQ DATA=LIB32076.TEST_DS_TP032076_M;
TABLE QUALIFICATION;
RUN;

PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET EMPLOYMENT = 'Yes'
WHERE ( EMPLOYMENT = '' OR EMPLOYMENT IS NULL ) AND QUALIFICATION = 'Graduate';
QUIT;

PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET EMPLOYMENT = 'No'
WHERE ( EMPLOYMENT = '' OR EMPLOYMENT IS NULL ) AND QUALIFICATION = 'Under Graduate';
QUIT;

/* MISSING VALUE FOR LOAN_AMOUNT */
PROC FREQ DATA=LIB32076.TEST_DS_TP032076_M;
TABLE LOAN_AMOUNT;
RUN;

PROC SQL;
SELECT AVG(LOAN_AMOUNT) FORMAT 8.0 AS AVERAGE_LOAN_AMOUNT FROM LIB32076.TEST_DS_TP032076_M
WHERE LOAN_AMOUNT NE . ;
RUN;

PROC SQL;
CREATE TABLE LIB32076.TEST_DS_TP032076_M_ALA
AS SELECT AVG(LOAN_AMOUNT) FORMAT 8.0 AS AVERAGE_LOAN_AMOUNT FROM LIB32076.TEST_DS_TP032076_M
WHERE LOAN_AMOUNT NE . ;
RUN;

PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET LOAN_AMOUNT = ( SELECT AVERAGE_LOAN_AMOUNT FROM LIB32076.TEST_DS_TP032076_M_ALA )
WHERE LOAN_AMOUNT EQ . ;
QUIT;

/* MISSING VALUE FOR LOAN_DURATION */
PROC FREQ DATA=LIB32076.TEST_DS_TP032076_M;
TABLE LOAN_DURATION;
RUN;

PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET LOAN_DURATION = 360
WHERE LOAN_DURATION EQ . OR LOAN_DURATION IS NULL;
QUIT;

/* MISSING VALUE FOR LOAN_HISTORY */
PROC FREQ DATA=LIB32076.TEST_DS_TP032076_M;
TABLE LOAN_HISTORY;
RUN;

PROC SQL;
SELECT LOAN_HISTORY, COUNT(*) AS NUMBERS FROM LIB32076.TEST_DS_TP032076_M
WHERE LOAN_HISTORY NE .
GROUP BY LOAN_HISTORY;
QUIT;

PROC SQL;
CREATE TABLE LIB32076.TEST_DS_TP032076_M_LH
AS SELECT LOAN_HISTORY, COUNT(*) AS NUMBERS FROM LIB32076.TEST_DS_TP032076_M
WHERE LOAN_HISTORY NE .
GROUP BY LOAN_HISTORY;
QUIT;

PROC SQL;
SELECT * FROM LIB32076.TEST_DS_TP032076_M_LH;
QUIT;

PROC SQL;
UPDATE LIB32076.TEST_DS_TP032076_M
SET LOAN_HISTORY = ( SELECT MAX(LOAN_HISTORY) FROM LIB32076.TEST_DS_TP032076_M_LH WHERE LOAN_HISTORY IN (0,1) )
WHERE LOAN_HISTORY EQ . ;
QUIT;


/* PREDICT LOAN APPROVAL STATUS */
PROC LOGISTIC INMODEL=LIB32076.TRAIN_DS_TP032076_MODEL; /* MODEL CREATED */
SCORE DATA=LIB32076.TEST_DS_TP032076_M /* TEST DATASET */
OUT = LIB32076.TEST_DS_TP032076_NEW_PREDICTIONS;
QUIT;

PROC SQL;
SELECT SME_LOAN_ID_NO, P_N, P_Y, I_LOAN_APPROVAL_STATUS 
FROM LIB32076.TEST_DS_TP032076_NEW_PREDICTIONS;
QUIT;

PROC SQL;
SELECT I_LOAN_APPROVAL_STATUS AS LOAN_APPROVAL_STATUS,
			AVG(P_N) AS AVERAGE_ENTRY_VALUE,
			MIN(P_N) AS LOWEST_ENTRY_VALUE,
			MAX(P_N) AS HIGHEST_ENTRY_VALUE,
			AVG(P_Y) AS AVERAGE_EXIT_VALUE,
			MIN(P_Y) AS LOWEST_EXIT_VALUE,
			MAX(P_Y) AS HIGHEST_EXIT_VALUE
			FROM LIB32076.TEST_DS_TP032076_NEW_PREDICTIONS
GROUP BY I_LOAN_APPROVAL_STATUS;
QUIT;

PROC SQL;
SELECT I_LOAN_APPROVAL_STATUS AS 'APPROVAL STATUS',
COUNT(*) AS NUMBERS FROM LIB32076.TEST_DS_TP032076_NEW_PREDICTIONS
GROUP BY I_LOAN_APPROVAL_STATUS;
QUIT;

/* ODS - OUTPUT DELIVERY SYSTEM */
ODS HTML CLOSE;
ODS PDF CLOSE;

/* DETERMINE THE PHYSICAL LOCATION OF PDF */
ODS PDF FILE= '/HOME/TEHYAPHENG/MYDAPTP032076/MYTESTLOAN_DS_NEW_PREDICTIONS_LOAN.PDF';
OPTIONS NOBYLINE NODATE;
TITLE 'BANK LOAN APPROVAL STATUS PREDICTED';

PROC REPORT DATA=LIB32076.TEST_DS_TP032076_NEW_PREDICTIONS NOWINDOWS;
BY SME_LOAN_ID_NO;
DEFINE SME_LOAN_ID_NO / GROUP 'LOAN ID';
DEFINE I_LOAN_APPROVAL_STATUS / GROUP 'APPROVAL STATUS';
FOOTNOTE '----END OF REPORT----';
RUN;
OPTIONS BYLINE;


/* CREATE MACRO */
%MACRO MACRO_LOAN_LOCATION;
%LET LOAN_LOCATION = City;
PROC PRINT DATA = LIB32076.TEST_DS_TP032076_NEW_PREDICTIONS NOOBS;
WHERE LOAN_LOCATION = '&LOAN_LOCATION';
TITLE 'LIST OF LOAN APPLICANTS FROM &LOAN_LOCATION';
RUN;
%MEND MACRO_LOAN_LOCATION;

/* RUN THIS SEPARATELY */
%MACRO_LOAN_LOCATION
